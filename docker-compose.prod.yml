services:
  # MySQL Database - Producción
  mysql:
    image: mysql:8.0
    container_name: oauth-mysql-prod
    restart: unless-stopped
    env_file:
      - .env.prod
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      TZ: ${MYSQL_TIMEZONE}
    ports:
      - '${MYSQL_PORT}:3306'
    command: [
      "--default-authentication-plugin=mysql_native_password",
      "--character-set-server=utf8mb4",
      "--collation-server=utf8mb4_unicode_ci",
      "--innodb-buffer-pool-size=1G",
      "--max-connections=200"
    ]
    volumes:
      - mysql_data_prod:/var/lib/mysql
    networks:
      - oauth-network-prod
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u${MYSQL_USER}", "-p${MYSQL_PASSWORD}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis Cache - Producción
  redis:
    image: redis:7-alpine
    container_name: oauth-redis-prod
    restart: unless-stopped
    env_file:
      - .env.prod
    command: ["redis-server", "--appendonly", "yes", "--requirepass", "${REDIS_PASSWORD}"]
    ports:
      - '6380:6379'
    volumes:
      - redis_data_prod:/data
    networks:
      - oauth-network-prod
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Aplicación OAuth - Producción
  app:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: oauth-app-prod
    restart: unless-stopped
    # La aplicación no expone puertos directamente - se comunica a través del proxy inverso
    env_file:
      - .env.prod
    environment:
      # Configuración del servidor
      NODE_ENV: ${NODE_ENV}
      PORT: ${PORT}
      API_VERSION: ${API_VERSION}
      BASE_URL: ${BASE_URL}

      # Base de datos MySQL
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_PORT: ${MYSQL_PORT}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_SSL: ${MYSQL_SSL}
      MYSQL_TIMEZONE: ${MYSQL_TIMEZONE}
      MYSQL_CONNECTION_LIMIT: ${MYSQL_CONNECTION_LIMIT}
      MYSQL_ACQUIRE_TIMEOUT: ${MYSQL_ACQUIRE_TIMEOUT}
      MYSQL_TIMEOUT: ${MYSQL_TIMEOUT}

      # Redis
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_DB: ${REDIS_DB}
      REDIS_TTL: ${REDIS_TTL}
      REDIS_KEY_PREFIX: ${REDIS_KEY_PREFIX}

      # JWT
      JWT_SECRET: ${JWT_SECRET}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN}
      JWT_REFRESH_EXPIRES_IN: ${JWT_REFRESH_EXPIRES_IN}
      JWT_ISSUER: ${JWT_ISSUER}
      JWT_AUDIENCE: ${JWT_AUDIENCE}

      # Proveedores OAuth
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      GOOGLE_CALLBACK_URL: ${GOOGLE_CALLBACK_URL}

      MICROSOFT_CLIENT_ID: ${MICROSOFT_CLIENT_ID}
      MICROSOFT_CLIENT_SECRET: ${MICROSOFT_CLIENT_SECRET}
      MICROSOFT_TENANT_ID: ${MICROSOFT_TENANT_ID}
      MICROSOFT_CALLBACK_URL: ${MICROSOFT_CALLBACK_URL}

      GITHUB_CLIENT_ID: ${GITHUB_CLIENT_ID}
      GITHUB_CLIENT_SECRET: ${GITHUB_CLIENT_SECRET}
      GITHUB_CALLBACK_URL: ${GITHUB_CALLBACK_URL}

      LINKEDIN_CLIENT_ID: ${LINKEDIN_CLIENT_ID}
      LINKEDIN_CLIENT_SECRET: ${LINKEDIN_CLIENT_SECRET}
      LINKEDIN_CALLBACK_URL: ${LINKEDIN_CALLBACK_URL}

      # Email
      EMAIL_SERVICE: ${EMAIL_SERVICE}
      EMAIL_HOST: ${EMAIL_HOST}
      EMAIL_PORT: ${EMAIL_PORT}
      EMAIL_SECURE: ${EMAIL_SECURE}
      EMAIL_USER: ${EMAIL_USER}
      EMAIL_PASSWORD: ${EMAIL_PASSWORD}

      # Frontend
      FRONTEND_URL: ${FRONTEND_URL}
      FRONTEND_SUCCESS_REDIRECT: ${FRONTEND_SUCCESS_REDIRECT}
      FRONTEND_ERROR_REDIRECT: ${FRONTEND_ERROR_REDIRECT}
      FRONTEND_EMAIL_VERIFICATION_URL: ${FRONTEND_EMAIL_VERIFICATION_URL}
      FRONTEND_PASSWORD_RESET_URL: ${FRONTEND_PASSWORD_RESET_URL}

      # Seguridad
      BCRYPT_ROUNDS: ${BCRYPT_ROUNDS}
      MAX_LOGIN_ATTEMPTS: ${MAX_LOGIN_ATTEMPTS}
      LOCKOUT_DURATION_MINUTES: ${LOCKOUT_DURATION_MINUTES}

      # Rate limiting
      RATE_LIMIT_WINDOW_MS: ${RATE_LIMIT_WINDOW_MS}
      RATE_LIMIT_MAX_REQUESTS: ${RATE_LIMIT_MAX_REQUESTS}
      RATE_LIMIT_AUTH_WINDOW_MS: ${RATE_LIMIT_AUTH_WINDOW_MS}
      RATE_LIMIT_AUTH_MAX_REQUESTS: ${RATE_LIMIT_AUTH_MAX_REQUESTS}

      # CORS
      CORS_ORIGIN: ${CORS_ORIGIN}
      CORS_CREDENTIALS: ${CORS_CREDENTIALS}
      CORS_METHODS: ${CORS_METHODS}
      CORS_ALLOWED_HEADERS: ${CORS_ALLOWED_HEADERS}

      # Logging
      LOG_LEVEL: ${LOG_LEVEL}
      LOG_FILE: ${LOG_FILE}
      LOG_ERROR_FILE: ${LOG_ERROR_FILE}
      LOG_MAX_SIZE: ${LOG_MAX_SIZE}
      LOG_MAX_FILES: ${LOG_MAX_FILES}

      # Feature flags
      FEATURE_2FA_ENABLED: ${FEATURE_2FA_ENABLED}
      FEATURE_EMAIL_VERIFICATION_REQUIRED: ${FEATURE_EMAIL_VERIFICATION_REQUIRED}
      FEATURE_OAUTH_ACCOUNT_LINKING: ${FEATURE_OAUTH_ACCOUNT_LINKING}
      FEATURE_ADMIN_PANEL: ${FEATURE_ADMIN_PANEL}
      FEATURE_AUDIT_LOGGING: ${FEATURE_AUDIT_LOGGING}
      FEATURE_RATE_LIMITING: ${FEATURE_RATE_LIMITING}
      FEATURE_PHONE_VERIFICATION_ENABLED: ${FEATURE_PHONE_VERIFICATION_ENABLED}

      # Audit
      AUDIT_LOG_ENABLED: ${AUDIT_LOG_ENABLED}
      AUDIT_LOG_RETENTION_DAYS: ${AUDIT_LOG_RETENTION_DAYS}

      # SMS (opcional)
      TWILIO_ACCOUNT_SID: ${TWILIO_ACCOUNT_SID}
      TWILIO_AUTH_TOKEN: ${TWILIO_AUTH_TOKEN}
      TWILIO_VERIFY_SERVICE_SID: ${TWILIO_VERIFY_SERVICE_SID}

      # Default password
      DEFAULT_PASSWORD: ${DEFAULT_PASSWORD}
    volumes:
      - app_logs_prod:/app/logs
    networks:
      - oauth-network-prod
      - proxy-network # Red compartida para nginx inverse proxy
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      # Healthcheck interno usando el puerto del contenedor
      test:
        ['CMD', 'wget', '--no-verbose', '--tries=1', '--spider', 'http://localhost:3001/api/v1/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  mysql_data_prod:
    driver: local
  redis_data_prod:
    driver: local
  app_logs_prod:
    driver: local

networks:
  oauth-network-prod:
    driver: bridge
  proxy-network:
    external: true
